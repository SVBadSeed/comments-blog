{"version":3,"file":"comments.js","mappings":"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","sources":["webpack://comments-blog/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://comments-blog/webpack/bootstrap","webpack://comments-blog/webpack/runtime/compat get default export","webpack://comments-blog/webpack/runtime/define property getters","webpack://comments-blog/webpack/runtime/global","webpack://comments-blog/webpack/runtime/hasOwnProperty shorthand","webpack://comments-blog/webpack/runtime/publicPath","webpack://comments-blog/webpack/runtime/jsonp chunk loading","webpack://comments-blog/./src/index.html","webpack://comments-blog/./src/assets/js/comments.js","webpack://comments-blog/./src/assets/js/inputEvents.js","webpack://comments-blog/./src/assets/js/errors.js","webpack://comments-blog/./src/assets/js/constants/comments.js","webpack://comments-blog/./src/assets/js/likeComment.js","webpack://comments-blog/./src/assets/js/deleteComment.js"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./assets/scss/index.scss\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<!doctype html> <html lang=\\\"ru\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,user-scalable=no,initial-scale=1,maximum-scale=1,minimum-scale=1\\\"> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\"> <link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com\\\"> <link rel=\\\"preconnect\\\" href=\\\"https://fonts.gstatic.com\\\" crossorigin> <link href=\\\"https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap\\\" rel=\\\"stylesheet\\\"> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"> <title>Document</title> </head> <body> <main class=\\\"main\\\"> <div class=\\\"container\\\"> <form class=\\\"form-comments\\\"> <h1 class=\\\"form-form-comments__title\\\">Комментарии</h1> <label class=\\\"form-comments__name\\\"> Ваше имя <input class=\\\"input-name\\\" type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Введите имя\\\"/> </label> <label class=\\\"form-comments__text\\\"> Сообщение <textarea class=\\\"textarea-text\\\" name=\\\"message\\\" placeholder=\\\"Введите сообщение\\\"></textarea> </label> <label class=\\\"form-comments__date\\\"> Выберите дату <input class=\\\"input-date\\\" type=\\\"date\\\" name=\\\"date\\\"> </label> <button class=\\\"form-comments__button\\\" type=\\\"submit\\\"> Отправить </button> </form> <div class=\\\"comments\\\"> </div> </div> </main> </body> </html> \";\n// Exports\nexport default code;","import {getCommentsHtml} from \"./constants/comments\"\r\nimport {createErrorName, createErrorText, removeErrorName, removeErrorText} from \"./errors\"\r\nimport {likeComment} from \"./likeComment\"\r\nimport {deleteComment} from \"./deleteComment\"\r\nimport {inputNameEvent, inputTextEvent} from \"./inputEvents\"\r\n\r\nconst commentsContainer = document.querySelector('.comments')\r\nconst form = document.querySelector('.form-comments')\r\n\r\nconst inputName = document.querySelector('.input-name')\r\nconst textareaText = document.querySelector('.textarea-text')\r\nconst inputDate = document.querySelector('.input-date')\r\n\r\ninputNameEvent(inputName)\r\ninputTextEvent(textareaText)\r\n// отправка формы. Отправляем форму = получаем комментарий с введенными данными.\r\nform.addEventListener('submit', event => {\r\n    event.preventDefault()\r\n    let valueName = inputName.value\r\n    let valueText = textareaText.value\r\n    let valueDate = inputDate.value\r\n\r\n    let valueNameVerify = valueName.replace(/\\s/g, '') === ''\r\n    let valueTextVerify = valueText.replace(/\\s/g, '') === ''\r\n\r\n    inputName.value = ''\r\n    textareaText.value = ''\r\n    inputDate.value = ''\r\n\r\n    let dateParse = new Date(valueDate).toLocaleDateString()\r\n\r\n    const today = new Date().toLocaleDateString()\r\n    const yesterday = new Date(Date.now() - 86400000).toLocaleDateString()\r\n\r\n    if (valueDate === '') {\r\n        valueDate = 'Сегодня, ' + new Date().toLocaleTimeString().slice(0, 5)\r\n    } else {\r\n        let year = Number(valueDate.slice(0, 4))\r\n        let month = Number(valueDate.slice(5, -3))\r\n        let day = Number(valueDate.slice(8, 10))\r\n\r\n        if (dateParse === today) {\r\n            valueDate = 'Сегодня, ' + new Date().toLocaleTimeString().slice(0, -3)\r\n        } else if (dateParse === yesterday) {\r\n            valueDate = 'Вчера, ' + new Date(Date.now() - 86400000).toLocaleTimeString().slice(0, -3)\r\n        } else {\r\n            valueDate = new Date(year, month, day).toLocaleDateString()\r\n        }\r\n    }\r\n\r\n// делаем проверки на ошибки и в случае ошибок = даем пользователю знать что не так (поле name и поле text)\r\n    removeErrorText(textareaText)\r\n    if (valueTextVerify) {\r\n        textareaText.classList.add('error')\r\n        createErrorText(textareaText, 'Поле не заполнено!')\r\n    } else {\r\n        textareaText.classList.remove('error')\r\n    }\r\n\r\n    removeErrorName(inputName)\r\n    if (valueNameVerify) {\r\n        inputName.classList.add('error')\r\n        createErrorName(inputName, 'Поле не заполнено!')\r\n    } else {\r\n        inputName.classList.remove('error')\r\n    }\r\n\r\n// проверяем поля на наличие пустых строчек и блокируем отправку формы. В противном случае создаем комментарий\r\n    if (valueTextVerify || valueNameVerify) {\r\n        return false\r\n    } else {\r\n        let newComment = document.createElement('div')\r\n        newComment.className = 'comment'\r\n        newComment.innerHTML = getCommentsHtml(valueName, valueText, valueDate)\r\n\r\n        likeComment(newComment)\r\n        deleteComment(newComment)\r\n\r\n        commentsContainer.append(newComment)\r\n    }\r\n})","export const inputNameEvent = (inputName) => {\r\n    inputName.addEventListener('keyup', event => {\r\n        event.target.classList.remove('error')\r\n\r\n        const labelName = document.querySelector('.form-comments__name')\r\n        labelName.classList.remove('error')\r\n        const errors = document.querySelectorAll('.error-name')\r\n\r\n        errors.forEach((error) => {\r\n            error.remove()\r\n        })\r\n    })\r\n}\r\n\r\nexport const inputTextEvent = (textareaText) => {\r\n    textareaText.addEventListener('keyup', event => {\r\n        event.target.classList.remove('error')\r\n\r\n        const labelText = document.querySelector('.form-comments__text')\r\n        labelText.classList.remove('error')\r\n        const errors = document.querySelectorAll('.error-text')\r\n\r\n        errors.forEach((error) => {\r\n            error.remove()\r\n        })\r\n    })\r\n}","export const createErrorName = (inputName, text) => {\r\n    const parent = inputName.parentNode\r\n\r\n    const error = document.createElement('div')\r\n    error.className = 'error-name'\r\n    error.textContent = text\r\n\r\n    parent.classList.add('error')\r\n    parent.append(error)\r\n}\r\n\r\nexport const createErrorText = (inputText, text) => {\r\n    const parent = inputText.parentNode\r\n\r\n    const error = document.createElement('div')\r\n    error.className = 'error-text'\r\n    error.textContent = text\r\n\r\n    parent.classList.add('error')\r\n    parent.append(error)\r\n}\r\nexport const removeErrorName = (inputName) => {\r\n    const parent = inputName.parentNode\r\n\r\n    if (parent.classList.contains('error')) {\r\n        parent.querySelector('.error-name').remove()\r\n        parent.classList.remove('error')\r\n    }\r\n\r\n}\r\nexport const removeErrorText = (textareaText) => {\r\n    const parent = textareaText.parentNode\r\n\r\n    if (parent.classList.contains('error')) {\r\n        parent.querySelector('.error-text').remove()\r\n        parent.classList.remove('error')\r\n    }\r\n}","export const getCommentsHtml = (name, text, date) => {\r\n    return `\r\n         <div class=\"comment-name\">${name}</div>\r\n         <div class=\"comment-text\">${text}</div>\r\n         <time class=\"comment-date\">${date}</time>\r\n         <svg class=\"comment-bin\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" width=\"25px\" height=\"25px\"><path fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" d=\"M19,6V3c0-1.104,0.896-2,2-2h8c1.104,0,2,0.896,2,2v3\"/><path fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" d=\"M40,6l-3.693,41.426C36.229,48.299,35.469,49,34.608,49H15.391c-0.86,0-1.621-0.701-1.699-1.574L10,6\"/><line fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" x1=\"8\" y1=\"6\" x2=\"42\" y2=\"6\"/><line fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" x1=\"25\" y1=\"11\" x2=\"25\" y2=\"44\"/><line fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" x1=\"31\" y1=\"11\" x2=\"31\" y2=\"44\"/><line fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" x1=\"19\" y1=\"11\" x2=\"19\" y2=\"44\"/></svg>  \r\n         <svg class=\"comment-like\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 19\"  width=\"25px\" height=\"25px\"><path fill=\"white\" d=\"M23.6 6.5c0 5-9.1 10.7-11.4 12-.3.2-.6.2-1 0C9 17.3 0 11.6 0 6.5 0 3 2.5 0 6.2 0c2.4 0 4.4 1.2 5.6 3a6.8 6.8 0 015.6-3c3.7 0 6.2 3 6.2 6.5z\"/></svg>\r\n           `\r\n}","export const likeComment = (newComment) => {\r\n    const commentsLikes = newComment.querySelectorAll('.comment-like')\r\n    commentsLikes.forEach((like) => {\r\n\r\n        like.addEventListener('click', () => {\r\n            if (like.classList.contains('liked')) {\r\n                like.classList.remove('liked')\r\n\r\n            } else {\r\n                like.classList.add('liked')\r\n            }\r\n        })\r\n    })\r\n}","export const deleteComment = (newComment) => {\r\n    const commentsBins = newComment.querySelectorAll('.comment-bin')\r\n    commentsBins.forEach((bin) => {\r\n\r\n        bin.addEventListener('click', () => {\r\n            const parent = bin.parentNode\r\n            parent.remove(parent)\r\n        })\r\n    })\r\n}"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","b","baseURI","self","href","___HTML_LOADER_IMPORT_0___","URL","commentsContainer","querySelector","form","inputName","textareaText","inputDate","addEventListener","event","target","classList","remove","querySelectorAll","forEach","error","inputNameEvent","inputTextEvent","preventDefault","valueName","value","valueText","valueDate","valueNameVerify","valueTextVerify","dateParse","Date","toLocaleDateString","today","yesterday","now","toLocaleTimeString","slice","year","Number","month","day","parent","parentNode","contains","removeErrorText","add","createErrorText","inputText","text","createElement","className","textContent","append","removeErrorName","createErrorName","newComment","innerHTML","like","likeComment","bin","deleteComment"],"sourceRoot":""}